name: Go - CD

on:
  push:
    branches:
      - main
      - next
      # dev is deployed manually by developers on their local machines
    paths:
      - '**go.mod'
      - '**go.sum'
      - '**.go'
  workflow_call:
    inputs:
      force-patch:
        description: Force new patch version, creating a new tag and release
        type: boolean
        default: false
        required: false
      force-rollback:
        description: Force rollback to specified git reference (use `latest` for latest successful deploy)
        type: string
        default: ''
        required: false
  workflow_dispatch:
    inputs:
      force-patch:
        description: Force new patch version, creating a new tag and release
        type: boolean
        default: false
        required: false
      force-rollback:
        description: Force rollback to specified git reference (use `latest` for latest successful deploy)
        type: string
        default: ''
        required: false

env:
  ARTIFACT_NAME: build-outputs
  DEPLOYS_DIR: ./deploy
  GORELEASER_DIST_DIR: ./dist/goreleaser
  GHA_BOT_NAME: github-actions[bot]
  GHA_BOT_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
  GIT_DEPLOYMENT_SUCCESS_TAG_PREFIX: deploy-success-
  GORELEASER_RENDER_CONFIG_SCRIPT_DIR: .github/script/reusable/render-goreleaser-config
  GORELEASER_CONFIG_TEMPLATE_DIR: config/reusable
  GORELEASER_CONFIG_OUTPUT_FILE: config/reusable/.goreleaser.yaml
  BUILDS_DIR: cmd
  RELEASE_PLEASE_CONFIG_FILE: config/release-please/release-please-config.json

concurrency:
  group: ${{ github.ref_name }}

defaults:
  run:
    shell: bash

jobs:
  build-code:
    name: Build code
    if: ${{ github.event.inputs.force-rollback == '' }}
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build code
        id: build
        uses: kemadev/workflows-and-actions/.github/actions/go-build@main

  get-deploys-list:
    name: Get deploys list
    needs: build-code
    if: ${{ github.event.inputs.force-rollback != '' || success() }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    outputs:
      deployment-dirs-list: ${{ steps.get-deploys-list.outputs.deployment-dirs-list }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Get deploys list
        id: get-deploys-list
        uses: kemadev/workflows-and-actions/.github/actions/go-get-deploys-list@main

  deploy:
    name: Deploy
    needs: get-deploys-list
    if: ${{ github.event.inputs.force-rollback == '' }}
    permissions:
      contents: read
      packages: read
      pull-requests: write
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    strategy:
      # Run sequentially in alphabetical order
      matrix:
        deploy: ${{ fromJSON(needs.get-deploys-list.outputs.deployment-dirs-list) }}
      max-parallel: 1
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Go deploy
        id: go-deploy
        uses: kemadev/workflows-and-actions/.github/actions/go-deploy@main

  tag-deploy-success:
    name: Tag deploy success
    needs:
      - deploy
    if: ${{ needs.deploy.result == 'success' }}
    permissions:
      contents: write
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Tag deploy success
        id: tag-deploy-success
        uses: kemadev/workflows-and-actions/.github/actions/tag-deploy-success@main

  release:
    name: Release
    needs: tag-deploy-success
    if: ${{ github.event.inputs.force-rollback == '' }}
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Release
        id: release
        uses: kemadev/workflows-and-actions/.github/actions/release@main

  prepare-rollback:
    name: Rollback
    needs:
      - deploy
    if: ${{ github.event.inputs.force-rollback != '' || failure() }}
    permissions:
      contents: read
      packages: read
    outputs:
      deployment-dirs-list: ${{ steps.get-deploys-list.outputs.deployment-dirs-list }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Checkout to latest sucessful deploy
        id: checkout-to-latest-sucessful-deploy
        uses: kemadev/workflows-and-actions/.github/actions/checkout-to-latest-successful-deploy@main
        with:
          force-rollback: ${{ github.event.inputs.force-rollback }}
      - name: Get deploys list
        id: get-deploys-list
        uses: kemadev/workflows-and-actions/.github/actions/go-get-deploys-list@main
        with:
          reverse: true
      - name: Build code
        id: build
        uses: kemadev/workflows-and-actions/.github/actions/go-build@main

  rollback:
    name: Rollback
    needs: prepare-rollback
    if: ${{ github.event.inputs.force-rollback == '' }}
    permissions:
      contents: read
      packages: read
      pull-requests: write
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    strategy:
      # Run sequentially in alphabetical order
      matrix:
        deploy: ${{ fromJSON(needs.prepare-rollback.outputs.deployment-dirs-list) }}
      max-parallel: 1
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Checkout to latest sucessful deploy
        id: checkout-to-latest-sucessful-deploy
        uses: kemadev/workflows-and-actions/.github/actions/checkout-to-latest-successful-deploy@main
        with:
          force-rollback: ${{ github.event.inputs.force-rollback }}
      - name: Go deploy
        id: go-deploy
        uses: kemadev/workflows-and-actions/.github/actions/go-deploy@main

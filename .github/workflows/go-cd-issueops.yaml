name: Go - CD IssueOps

on:
  issue_comment:
    types:
      - created
  workflow_call: {}

concurrency:
  group: go-cd-issueops

defaults:
  run:
    shell: bash

jobs:
  dispatch:
    name: Dispatch IssueOps commands
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    outputs:
      continue: ${{ steps.dispatch-issueops-commands.outputs.continue }}
      noop: ${{ steps.dispatch-issueops-commands.outputs.noop }}
      deployment_id: ${{ steps.dispatch-issueops-commands.outputs.deployment_id }}
      environment: ${{ steps.dispatch-issueops-commands.outputs.environment }}
      sha: ${{ steps.dispatch-issueops-commands.outputs.sha }}
      comment_id: ${{ steps.dispatch-issueops-commands.outputs.comment_id }}
      initial_reaction_id: ${{ steps.dispatch-issueops-commands.outputs.initial_reaction_id }}
      actor_handle: ${{ steps.dispatch-issueops-commands.outputs.actor_handle }}
    permissions:
      pull-requests: write
      deployments: write
      contents: write
      checks: read
      statuses: read
    steps:
      - name: Receive IssueOps commands
        id: dispatch-issueops-commands
        uses: github/branch-deploy@v10
        with:
          environment_targets: dev,next
          environment: dev
          skip_reviews: dev
          skip_ci: dev
          permissions: write,admin
          allow_non_default_target_branch_deployments: true
          update_branch: disabled
          skip_completing: true

  build-code:
    name: Build code
    needs: dispatch
    if: ${{ needs.dispatch.outputs.continue == 'true' }}
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.dispatch.outputs.sha }}
          fetch-depth: 0
      - name: Build code
        id: build
        uses: kemadev/workflows-and-actions/.github/actions/go-build@main

  get-deploys-list:
    name: Get deploys list
    needs:
      - dispatch
      - build-code
    if: ${{ needs.dispatch.outputs.continue == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    outputs:
      deployment-dirs-list: ${{ steps.get-deploys-list.outputs.deployment-dirs-list }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.dispatch.outputs.sha }}
          fetch-depth: 0
      - name: Get deploys list
        id: get-deploys-list
        uses: kemadev/workflows-and-actions/.github/actions/go-get-deploys-list@main

  deploy:
    name: Deploy
    needs:
      - dispatch
      - get-deploys-list
    if: ${{ needs.dispatch.outputs.continue == 'true' }}
    permissions:
      contents: read
      packages: read
      pull-requests: write
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    strategy:
      matrix:
        deploy: ${{ fromJSON(needs.get-deploys-list.outputs.deployment-dirs-list) }}
      max-parallel: 1
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.dispatch.outputs.sha }}
      - name: Go deploy
        id: go-deploy
        uses: kemadev/workflows-and-actions/.github/actions/go-deploy@main
        if: ${{ needs.dispatch.outputs.continue == 'true' }}
        with:
          noop: ${{ needs.dispatch.outputs.noop }}


  # Handle post deployment, see https://github.com/github/branch-deploy/blob/eb9366890f2ba137867043eae5842ce9c0806bfd/README.md#manual-deployment-control
  # update the deployment result - manually complete the deployment that was created by the branch-deploy action
  result:
    needs: [dispatch, deploy]
    runs-on: ubuntu-latest
    # run even on failures but only if the trigger job set continue to true
    if: ${{ always() && needs.dispatch.outputs.continue == 'true' }}

    steps:
      # if a previous step failed, set a variable to use as the deployment status
      - name: set deployment status
        id: deploy-status
        if: ${{ needs.dispatch.result == 'failure' || needs.deploy.result == 'failure' }}
        run: |
          echo "DEPLOY_STATUS=failure" >> $GITHUB_OUTPUT

      # use the GitHub CLI to update the deployment status that was initiated by the branch-deploy action
      - name: Create a deployment status
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}
          DEPLOY_STATUS: ${{ steps.deploy-status.outputs.DEPLOY_STATUS }}
        run: |
          if [ -z "${DEPLOY_STATUS}" ]; then
            DEPLOY_STATUS="success"
          fi

          gh api \
            --method POST \
            repos/{owner}/{repo}/deployments/${{ needs.dispatch.outputs.deployment_id }}/statuses \
            -f environment='${{ needs.dispatch.outputs.environment }}' \
            -f state=${DEPLOY_STATUS}

      # use the GitHub CLI to remove the non-sticky lock that was created by the branch-deploy action
      - name: Remove a non-sticky lock
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}
        run: |
          # Fetch the lock.json file from the branch
          gh api \
            --method GET \
            repos/{owner}/{repo}/contents/lock.json?ref=${{ needs.dispatch.outputs.environment }}-branch-deploy-lock \
            --jq '.content' \
            | base64 --decode \
            > lock.json

          # Check if the sticky value is true
          if [ "$(jq -r '.sticky' lock.json)" = "true" ]; then
            echo "The lock is sticky, skipping the delete step"
          else
            # use the GitHub CLI to remove the non-sticky lock that was created by the branch-deploy action
            echo "The lock is not sticky, deleting the lock"
            gh api \
              --method DELETE \
              repos/{owner}/{repo}/git/refs/heads/${{ needs.dispatch.outputs.environment }}-branch-deploy-lock
          fi

          rm lock.json

      # remove the default 'eyes' reaction from the comment that triggered the deployment
      # this reaction is added by the branch-deploy action by default
      - name: remove eyes reaction
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api \
            --method DELETE \
            repos/{owner}/{repo}/issues/comments/${{ needs.dispatch.outputs.comment_id }}/reactions/${{ needs.dispatch.outputs.initial_reaction_id }}

      # if the deployment was successful, add a 'rocket' reaction to the comment that triggered the deployment
      - name: rocket reaction
        if: ${{ steps.deploy-status.outputs.DEPLOY_STATUS != 'failure' }}
        uses: GrantBirki/comment@e6bf4bc177996c9572b4ddb98b25eb1a80f9abc9 # pin@v2.0.7
        with:
          comment-id: ${{ needs.dispatch.outputs.comment_id }}
          reactions: rocket

      # if the deployment failed, add a '-1' (thumbs down) reaction to the comment that triggered the deployment
      - name: failure reaction
        if: ${{ steps.deploy-status.outputs.DEPLOY_STATUS == 'failure' }}
        uses: GrantBirki/comment@e6bf4bc177996c9572b4ddb98b25eb1a80f9abc9 # pin@v2.0.7
        with:
          comment-id: ${{ needs.dispatch.outputs.comment_id }}
          reactions: '-1'

      # if the deployment was successful, add a 'success' comment
      - name: success comment
        if: ${{ steps.deploy-status.outputs.DEPLOY_STATUS != 'failure' }}
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # pin@v4.0.0
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ### Deployment Results ✅

            **${{ needs.dispatch.outputs.actor_handle }}** successfully deployed `${{ needs.dispatch.outputs.sha }}` to **${{ needs.dispatch.outputs.environment }}**

      # if the deployment was not successful, add a 'failure' comment
      - name: failure comment
        if: ${{ steps.deploy-status.outputs.DEPLOY_STATUS == 'failure' }}
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # pin@v4.0.0
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ### Deployment Results ❌

            **${{ needs.dispatch.outputs.actor_handle }}** had a failure when deploying `${{ needs.dispatch.outputs.sha }}` to **${{ needs.dispatch.outputs.environment }}**
